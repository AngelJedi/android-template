buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.6.+'
        classpath 'org.dbtools:dbtools-gen:1.+'
    }
}

apply plugin: 'android'

archivesBaseName = 'android-template'
def version = '1.0.0.0'
def androidVersionCode = 1000

repositories {
    mavenLocal()
    maven { url "http://www.ldsmobile.org/nexus/content/groups/public/" } // LDS Mobile Repo
    maven { url "http://www.ldsmobile.org/nexus/content/repositories/snapshots" } // LDS Mobile SNAPSHOTS
    maven { url "http://code.lds.org/nexus/content/groups/main-repo" } // ICS Repo
    maven { url 'http://download.crashlytics.com/maven' }
    mavenCentral()
}

dependencies {
    // Android
    compile "com.android.support:support-v4:18.0.+"
    compile "com.android.support:appcompat-v7:18.0.+"
//    compile 'com.google.android.gms:play-services:3.1.36'

    // UI
    compile('com.astuetz:pagesliding-tabstrip:1.0-20130727') { exclude module: 'support-v4' exclude module: 'support-v7' }
    compile 'com.emilsjolander:stickylistheaders:1.0.0-20130723'

    // Code
    compile 'com.squareup.dagger:dagger:1.1.0'
    compile 'com.squareup.dagger:dagger-compiler:1.1.0'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.2.2'
    compile 'joda-time:joda-time:2.3'
    compile 'org.dbtools:dbtools-android:1.4.0'

    // Statistics
//    compile 'flurry.sdk:flurry-agent-android:3.2.1'
//    compile 'com.crashlytics.android:crashlytics:[1.0.1,)'
}

android {
    compileSdkVersion 18
    buildToolsVersion '18.1'

    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 18

        versionCode androidVersionCode
        versionName version // use the gradle version
    }

    // defined values my* in ~/.gradle/gradle.properties
//    signingConfigs {
//        prodConfig {
//            storeFile file(myKeystore)
//            storePassword myKeystorePassword
//            keyAlias myKeyAlias
//            keyPassword myKeyPassword
//        }
//    }

    buildTypes {
        debug {
            versionNameSuffix '-DEV'
        }
        release {
//            signingConfig signingConfigs.prodConfig;
            versionNameSuffix ''
        }
    }

    //set the build number
    android.applicationVariants.all { variant ->

        // set the build timestamp on the file and in the app
        def timestamp = new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("GMT"));

        // name the file with the version and timestamp (does not work well with the IDE... do not do on debug build)
        if (variant.buildType.name != "debug") {
            def apk = variant.packageApplication.outputFile;
            def newName = apk.name.replace(".apk", "-" + version + "-" + timestamp + ".apk");
            variant.packageApplication.outputFile = new File(apk.parentFile, newName);
        }

        variant.mergeResources.doLast {
            def buildNumber = variant.buildType.name != "release" ? version + variant.buildType.versionNameSuffix + " (" + timestamp + ")" : version + " (" + timestamp + ")";
            File valuesFile = file("${buildDir}/res/all/${variant.dirName}/values/values.xml")
            String content = valuesFile.getText('UTF-8')
            content = content.replaceAll(/devBuild/, buildNumber)
            valuesFile.write(content, 'UTF-8')
        }
    }
}

task dbtools {
    description = 'Generate DBTools domain classes'
    doLast {
        // NOTE: BE Sure to add the following above:
        //    buildscript {
        //        repositories {
        //            mavenCentral()
        //        }
        //        dependencies {
        //            classpath 'org.dbtools:dbtools-gen:1.+'
        //        }
        //    }

        System.out.println("Generating DBTools Classes...")

        // properties
        String schemaFilename = "src/main/database/schema.xml";
        boolean injectionSupport = true; // support for CDI
        boolean dateTimeSupport = true; // support for jsr DateTime (Joda Time)
        String baseOutputDir = "src/main/java/org/company/project/domain";
        String basePackageName = "org.company.project.domain";
        org.dbtools.gen.android.AndroidDBObjectBuilder.buildAll(schemaFilename, baseOutputDir, basePackageName, injectionSupport, dateTimeSupport);
    }
}
